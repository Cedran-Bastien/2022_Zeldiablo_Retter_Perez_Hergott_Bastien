@startuml
'https://plantuml.com/class-diagram

title Diagramme gameLaby

interface Jeu {
    +update(double secondes, Clavier clavier)
    +init()
    +etreFini()
    }

interface DessinJeu {
    +dessinerJeu (Jeu jeu, Canvas canvas)
    }



class LabyDessin{
    +TAILLE_RECTANGLE : int
    +dessinerJeu(Jeu jeu, Canvas canvas)
}

class LabyJeu{
    -laby : Labyrinthe
    +LabyJeu()
    +update(double secondes, Clavier clavier)
    +init()
    +etreFini() : boolean
    +getLabi() : Labyrinthe
    }

class Perso{
    -pv : int
    -x : int
    -y : int
    +Perso(int dx, int dy)
    +etrePresent(int dx, int dy) : boolean
    +perdrePv()
    +getX() : int
    +getY() : int
    }

class Labyrinthe{
    +MUR : char
    +PJ : char
    +VIDE : char
    +HAUT = String
    +BAS = String
    +GAUCHE : String
    +DROITE : String
    +murs : boolean[]
    +getSuivant(int x, int y, String action) : int
    +Labyrinthe(String nom)
    +deplacerPerso(String action)
    +etreFini() : boolean
     +getLengthY() : int
     +getLength() : int
     +getMur(int x, int y) : boolean
     +getPj() : Perso
     +getCase(int x, int y) : Case
    }

abstract Case{
    - x : int
    - y : int
    + abstract faireEffet()
    + etrePresent(int dx, int dy)
    + getX() : int
    + getY() : int
}

class CasesDeclencheur{
    + faireEffet()
}

class CasesPiegees{
    + DEGAT : int
    + perso : Perso
    + faireEffet()
}

DessinJeu <|.. LabyDessin
Jeu <|.. LabyJeu
Labyrinthe "1" --> "1" Perso : +pj
Labyrinthe "1" -> "*" Case : +case
LabyDessin .> LabyJeu : uses
LabyJeu "1" --> "1" Labyrinthe : laby
Case <|-- CasesDeclencheur
Case <|-- CasesPiegees

@enduml